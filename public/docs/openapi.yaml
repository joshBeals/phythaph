openapi: 3.0.3
info:
  title: Phythaph
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://phythaph.herokuapp.com'
paths:
  /api/auth/register:
    post:
      summary: 'Register new user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Registration Successful\",\n   \"data\": {\n      [UserData]\n   }"
        400:
          description: 'Registration Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Registration Failed'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Registration Failed'
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: neque
                last_name:
                  type: string
                  description: ''
                  example: placeat
                email:
                  type: string
                  description: ''
                  example: dolorem
                password:
                  type: string
                  description: ''
                  example: et
              required:
                - first_name
                - last_name
                - email
                - password
      security: []
  /api/auth/login:
    post:
      summary: 'User Login'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Login Successful\",\n   \"data\": {\n      \"user\": {\n          ...\n      },\n      \"token\": jwt_token\n   }"
        400:
          description: 'Invalid Credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Invalid Credentials'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Invalid Credentials'
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: odit
                password:
                  type: string
                  description: ''
                  example: sed
              required:
                - email
                - password
      security: []
  '/api/auth/email/verify/{id}':
    get:
      summary: 'Email Verification'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  success: false
                  message: 'Invalid/Expired url provided.'
                properties:
                  status:
                    type: boolean
                    example: false
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Invalid/Expired url provided.'
      tags:
        - 'Auth APIs'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify.'
        example: iure
        required: true
        schema:
          type: string
  '/api/auth/email/resend/{id}':
    get:
      summary: 'Resend Verification Email'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Email verification link sent on your email!\",\n   }"
        400:
          description: 'Email already verified!'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Email already verified!'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Email already verified!'
      tags:
        - 'Auth APIs'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the resend.'
        example: ex
        required: true
        schema:
          type: string
  /api/auth/password/forgot-password:
    post:
      summary: 'Send Reset Password Link'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Mail sent successfully\",\n   }"
        400:
          description: 'Error Message'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Error Message'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Error Message'
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: facere
              required:
                - email
      security: []
  /api/auth/password/reset:
    post:
      summary: 'Reset Password'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Password reset successfully\",\n   }"
        400:
          description: 'Error Message'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Error Message'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Error Message'
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: nostrum
                token:
                  type: string
                  description: ''
                  example: quo
                password:
                  type: string
                  description: ''
                  example: consequuntur
              required:
                - email
                - token
                - password
      security: []
  /api/setup:
    post:
      summary: 'Registration Setup'
      description: 'Complete user registration.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Setup Complete!\",\n   \"data\": {\n      \"user\": {\n          ...\n      }\n   }"
      tags:
        - 'Auth APIs'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                account_type:
                  type: string
                  description: optional
                  example: sit
                phone:
                  type: string
                  description: optional
                  example: voluptates
                gender:
                  type: string
                  description: optional
                  example: expedita
                birthday:
                  type: date
                  description: optional
                  example: dolorum
                address:
                  type: string
                  description: optional
                  example: ab
                house_number:
                  type: string
                  description: optional
                  example: voluptas
                street:
                  type: string
                  description: optional
                  example: eos
                lga:
                  type: string
                  description: optional
                  example: nisi
                lcda:
                  type: string
                  description: optional
                  example: hic
                company_name:
                  type: string
                  description: optional
                  example: et
                company_phone:
                  type: string
                  description: optional
                  example: officia
                country:
                  type: string
                  description: optional
                  example: placeat
                postal_code:
                  type: string
                  description: optional
                  example: fugit
                city:
                  type: string
                  description: optional
                  example: provident
                state:
                  type: string
                  description: optional
                  example: quae
      security: []
  /api/auth/logout:
    get:
      summary: 'User Logout'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Logout Successful'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Logout Successful'
      tags:
        - 'Auth APIs'
      security: []
  /api/user:
    get:
      summary: 'User Data'
      description: 'Get user data'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"user\": {\n          ...\n      }\n   }"
        404:
          description: 'User not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'User not found'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - 'Auth APIs'
      security: []
  /api/me:
    get:
      summary: 'User Data'
      description: 'Get user data.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"user\": {\n          ...\n      }\n   }"
        404:
          description: 'User not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'User not found'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - 'Auth APIs'
      security: []
  /api/categories:
    get:
      summary: 'Fetch Categories'
      description: 'Get all categories'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"categories\": {\n          ...\n      }\n   }"
        404:
          description: 'User not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'User not found'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - 'Category APIs'
      security: []
  /api/filter/currencies:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      name: Naira
                      iso: ngn
                      exchange_rate: '0.00'
                      created_at: '2022-08-16T20:11:48.000000Z'
                      updated_at: '2022-08-16T20:11:48.000000Z'
                    -
                      id: 2
                      name: Dollar
                      iso: usd
                      exchange_rate: '630.00'
                      created_at: '2022-08-16T20:12:06.000000Z'
                      updated_at: '2022-08-16T20:12:06.000000Z'
                  first_page_url: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://phythaph.herokuapp.com/api/filter/currencies'
                  per_page: 10
                  prev_page_url: null
                  to: 2
                  total: 2
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Naira
                        iso: ngn
                        exchange_rate: '0.00'
                        created_at: '2022-08-16T20:11:48.000000Z'
                        updated_at: '2022-08-16T20:11:48.000000Z'
                      -
                        id: 2
                        name: Dollar
                        iso: usd
                        exchange_rate: '630.00'
                        created_at: '2022-08-16T20:12:06.000000Z'
                        updated_at: '2022-08-16T20:12:06.000000Z'
                    items:
                      type: object
                  first_page_url:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/currencies'
                  per_page:
                    type: integer
                    example: 10
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 2
                  total:
                    type: integer
                    example: 2
      tags:
        - Endpoints
      security: []
tags:
  -
    name: 'Auth APIs'
    description: ''
  -
    name: 'Category APIs'
    description: ''
  -
    name: Endpoints
    description: ''
