openapi: 3.0.3
info:
  title: Phythaph
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://phythaph.herokuapp.com'
paths:
  /api/wallet/history:
    get:
      summary: 'Fetch Wallet History'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Request successful\",\n   \"data\": {\n         \"walletHistory\": {...}\n     }\n }"
        404:
          description: Error
          content:
            text/plain:
              schema:
                type: string
                example: "\" {\n   \"success\": false,\n   \"message\": Error\"\n }"
      tags:
        - 'Wallet APIs'
      security: []
  '/api/wallet/withdraw/{amount}':
    get:
      summary: 'Withdraw Funds'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Withdrawal successful'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Withdrawal successful'
        404:
          description: Error
          content:
            text/plain:
              schema:
                type: string
                example: "\" {\n   \"success\": false,\n   \"message\": Error\"\n }"
      tags:
        - 'Wallet APIs'
      security: []
    parameters:
      -
        in: path
        name: amount
        description: ''
        example: unde
        required: true
        schema:
          type: string
  /api/auth/register:
    post:
      summary: 'Register new user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Registration Successful\",\n   \"data\": {\n      [UserData]\n   }"
        400:
          description: 'Registration Failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Registration Failed'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Registration Failed'
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: voluptate
                last_name:
                  type: string
                  description: ''
                  example: blanditiis
                email:
                  type: string
                  description: ''
                  example: voluptate
                password:
                  type: string
                  description: ''
                  example: similique
              required:
                - first_name
                - last_name
                - email
                - password
      security: []
  /api/auth/login:
    post:
      summary: 'User Login'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Login Successful\",\n   \"data\": {\n      \"user\": {\n          ...\n      },\n      \"token\": jwt_token\n   }"
        400:
          description: 'Invalid Credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Invalid Credentials'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Invalid Credentials'
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: et
                password:
                  type: string
                  description: ''
                  example: est
              required:
                - email
                - password
      security: []
  '/api/auth/email/verify/{id}':
    get:
      summary: 'Email Verification'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        302:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"refresh\" content=\"0;url='https://phythaph-web-app-new.herokuapp.com/email/verify/fail'\" />\n\n        <title>Redirecting to https://phythaph-web-app-new.herokuapp.com/email/verify/fail</title>\n    </head>\n    <body>\n        Redirecting to <a href=\"https://phythaph-web-app-new.herokuapp.com/email/verify/fail\">https://phythaph-web-app-new.herokuapp.com/email/verify/fail</a>.\n    </body>\n</html>"
      tags:
        - 'Auth APIs'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify.'
        example: et
        required: true
        schema:
          type: string
  '/api/auth/email/resend/{id}':
    get:
      summary: 'Resend Verification Email'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Email verification link sent on your email!\",\n   }"
        400:
          description: 'Email already verified!'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Email already verified!'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Email already verified!'
      tags:
        - 'Auth APIs'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the resend.'
        example: nam
        required: true
        schema:
          type: string
  /api/auth/password/forgot-password:
    post:
      summary: 'Send Reset Password Link'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Mail sent successfully\",\n   }"
        400:
          description: 'Error Message'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Error Message'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Error Message'
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: iure
              required:
                - email
      security: []
  /api/auth/password/reset:
    post:
      summary: 'Reset Password'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Password reset successfully\",\n   }"
        400:
          description: 'Error Message'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Error Message'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Error Message'
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: ea
                token:
                  type: string
                  description: ''
                  example: sit
                password:
                  type: string
                  description: ''
                  example: voluptatibus
              required:
                - email
                - token
                - password
      security: []
  /api/setup:
    post:
      summary: 'Registration Setup'
      description: 'Complete user registration.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Setup Complete!\",\n   \"data\": {\n      \"user\": {\n          ...\n      }\n   }"
      tags:
        - 'Auth APIs'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                account_type:
                  type: string
                  description: optional
                  example: sed
                phone:
                  type: string
                  description: optional
                  example: est
                gender:
                  type: string
                  description: optional
                  example: blanditiis
                birthday:
                  type: date
                  description: optional
                  example: est
                address:
                  type: string
                  description: optional
                  example: saepe
                house_number:
                  type: string
                  description: optional
                  example: quas
                street:
                  type: string
                  description: optional
                  example: amet
                lga:
                  type: string
                  description: optional
                  example: exercitationem
                lcda:
                  type: string
                  description: optional
                  example: consequatur
                company_name:
                  type: string
                  description: optional
                  example: fuga
                company_phone:
                  type: string
                  description: optional
                  example: quam
                country:
                  type: string
                  description: optional
                  example: quidem
                postal_code:
                  type: string
                  description: optional
                  example: sunt
                rc_number:
                  type: string
                  description: optional
                  example: consequatur
                city:
                  type: string
                  description: optional
                  example: eligendi
                state:
                  type: string
                  description: optional
                  example: ut
      security: []
  /api/auth/logout:
    get:
      summary: 'User Logout'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Logout Successful'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Logout Successful'
      tags:
        - 'Auth APIs'
      security: []
  /api/user:
    get:
      summary: 'User Data'
      description: 'Get user data'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"user\": {\n          ...\n      }\n   }"
        404:
          description: 'User not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'User not found'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - 'Auth APIs'
      security: []
  /api/me:
    get:
      summary: 'User Data'
      description: 'Get user data.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"user\": {\n          ...\n      }\n   }"
        404:
          description: 'User not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'User not found'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - 'Auth APIs'
      security: []
  /api/filter/currencies:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      name: Naira
                      iso: ngn
                      exchange_rate: '0.00'
                      created_at: '2022-08-16T20:11:48.000000Z'
                      updated_at: '2022-08-16T20:11:48.000000Z'
                    -
                      id: 2
                      name: Dollar
                      iso: usd
                      exchange_rate: '630.00'
                      created_at: '2022-08-16T20:12:06.000000Z'
                      updated_at: '2022-08-16T20:12:06.000000Z'
                  first_page_url: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://phythaph.herokuapp.com/api/filter/currencies'
                  per_page: 10
                  prev_page_url: null
                  to: 2
                  total: 2
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Naira
                        iso: ngn
                        exchange_rate: '0.00'
                        created_at: '2022-08-16T20:11:48.000000Z'
                        updated_at: '2022-08-16T20:11:48.000000Z'
                      -
                        id: 2
                        name: Dollar
                        iso: usd
                        exchange_rate: '630.00'
                        created_at: '2022-08-16T20:12:06.000000Z'
                        updated_at: '2022-08-16T20:12:06.000000Z'
                    items:
                      type: object
                  first_page_url:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://phythaph.herokuapp.com/api/filter/currencies?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/currencies'
                  per_page:
                    type: integer
                    example: 10
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 2
                  total:
                    type: integer
                    example: 2
      tags:
        - Endpoints
      security: []
  /api/filter/users:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 290800
                      first_name: Testing
                      last_name: Love
                      email: alelebealsjoshua@gmail.com
                      email_verified_at: null
                      account_type: individual
                      pawn_master: 0
                      plan_id: null
                      subscription_id: null
                      gender: male
                      birthday: '1999-04-22'
                      phone: phone
                      address: ghjklskla
                      company_name: ghjklskla
                      company_phone: ghjklskla
                      rc_number: null
                      country: null
                      postal_code: ghjklskla
                      house_number: ghjklskla
                      street: ghjklskla
                      lcda: ghjklskla
                      lga: ghjklskla
                      city: ghjklskla
                      state: ghjklskla
                      avatar: null
                      avatar_thumb: null
                      is_active: 0
                      is_blocked: 0
                      must_change_password: 0
                      referral_code: 2yDdc3O4
                      referred_by: null
                      created_at: '2022-08-12T16:34:45.000000Z'
                      updated_at: '2022-08-23T21:40:58.000000Z'
                      name: 'Testing Love'
                      avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                      name_with_email: 'Testing Love - alelebealsjoshua@gmail.com'
                    -
                      id: 290802
                      first_name: Testing
                      last_name: Love
                      email: alelebealsjoshua1@gmail.com
                      email_verified_at: null
                      account_type: individual
                      pawn_master: 0
                      plan_id: null
                      subscription_id: null
                      gender: null
                      birthday: null
                      phone: '08092834743'
                      address: null
                      company_name: null
                      company_phone: null
                      rc_number: null
                      country: null
                      postal_code: null
                      house_number: null
                      street: null
                      lcda: null
                      lga: null
                      city: null
                      state: null
                      avatar: null
                      avatar_thumb: null
                      is_active: 0
                      is_blocked: 0
                      must_change_password: 0
                      referral_code: EP2kpt1y
                      referred_by: null
                      created_at: '2022-08-12T16:46:21.000000Z'
                      updated_at: '2022-08-22T13:54:40.000000Z'
                      name: 'Testing Love'
                      avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                      name_with_email: 'Testing Love - alelebealsjoshua1@gmail.com'
                    -
                      id: 290803
                      first_name: Testing
                      last_name: Love
                      email: alelebealsjoshua10@gmail.com
                      email_verified_at: null
                      account_type: individual
                      pawn_master: 0
                      plan_id: null
                      subscription_id: null
                      gender: null
                      birthday: null
                      phone: null
                      address: null
                      company_name: null
                      company_phone: null
                      rc_number: null
                      country: null
                      postal_code: null
                      house_number: null
                      street: null
                      lcda: null
                      lga: null
                      city: null
                      state: null
                      avatar: null
                      avatar_thumb: null
                      is_active: 0
                      is_blocked: 0
                      must_change_password: 0
                      referral_code: rkCoOjx4
                      referred_by: null
                      created_at: '2022-08-12T16:46:46.000000Z'
                      updated_at: '2022-08-13T17:35:59.000000Z'
                      name: 'Testing Love'
                      avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                      name_with_email: 'Testing Love - alelebealsjoshua10@gmail.com'
                    -
                      id: 290804
                      first_name: Testing
                      last_name: Love
                      email: alelebealsjoshua101@gmail.com
                      email_verified_at: '2022-08-12T16:49:00.000000Z'
                      account_type: individual
                      pawn_master: 0
                      plan_id: null
                      subscription_id: null
                      gender: null
                      birthday: null
                      phone: null
                      address: null
                      company_name: null
                      company_phone: null
                      rc_number: null
                      country: null
                      postal_code: null
                      house_number: null
                      street: null
                      lcda: null
                      lga: null
                      city: null
                      state: null
                      avatar: null
                      avatar_thumb: null
                      is_active: 0
                      is_blocked: 0
                      must_change_password: 0
                      referral_code: w6snHTrK
                      referred_by: null
                      created_at: '2022-08-12T16:47:34.000000Z'
                      updated_at: '2022-08-12T16:52:25.000000Z'
                      name: 'Testing Love'
                      avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                      name_with_email: 'Testing Love - alelebealsjoshua101@gmail.com'
                    -
                      id: 290805
                      first_name: Testing
                      last_name: Love
                      email: alelebealsjoshua0@gmail.com
                      email_verified_at: null
                      account_type: individual
                      pawn_master: 0
                      plan_id: null
                      subscription_id: null
                      gender: null
                      birthday: null
                      phone: null
                      address: null
                      company_name: null
                      company_phone: null
                      rc_number: null
                      country: null
                      postal_code: null
                      house_number: null
                      street: null
                      lcda: null
                      lga: null
                      city: null
                      state: null
                      avatar: null
                      avatar_thumb: null
                      is_active: 0
                      is_blocked: 0
                      must_change_password: 0
                      referral_code: 0fmZMKYs
                      referred_by: null
                      created_at: '2022-08-13T18:58:42.000000Z'
                      updated_at: '2022-08-15T09:11:32.000000Z'
                      name: 'Testing Love'
                      avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                      name_with_email: 'Testing Love - alelebealsjoshua0@gmail.com'
                  first_page_url: 'http://phythaph.herokuapp.com/api/filter/users?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://phythaph.herokuapp.com/api/filter/users?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://phythaph.herokuapp.com/api/filter/users?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://phythaph.herokuapp.com/api/filter/users'
                  per_page: 10
                  prev_page_url: null
                  to: 5
                  total: 5
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 290800
                        first_name: Testing
                        last_name: Love
                        email: alelebealsjoshua@gmail.com
                        email_verified_at: null
                        account_type: individual
                        pawn_master: 0
                        plan_id: null
                        subscription_id: null
                        gender: male
                        birthday: '1999-04-22'
                        phone: phone
                        address: ghjklskla
                        company_name: ghjklskla
                        company_phone: ghjklskla
                        rc_number: null
                        country: null
                        postal_code: ghjklskla
                        house_number: ghjklskla
                        street: ghjklskla
                        lcda: ghjklskla
                        lga: ghjklskla
                        city: ghjklskla
                        state: ghjklskla
                        avatar: null
                        avatar_thumb: null
                        is_active: 0
                        is_blocked: 0
                        must_change_password: 0
                        referral_code: 2yDdc3O4
                        referred_by: null
                        created_at: '2022-08-12T16:34:45.000000Z'
                        updated_at: '2022-08-23T21:40:58.000000Z'
                        name: 'Testing Love'
                        avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                        name_with_email: 'Testing Love - alelebealsjoshua@gmail.com'
                      -
                        id: 290802
                        first_name: Testing
                        last_name: Love
                        email: alelebealsjoshua1@gmail.com
                        email_verified_at: null
                        account_type: individual
                        pawn_master: 0
                        plan_id: null
                        subscription_id: null
                        gender: null
                        birthday: null
                        phone: '08092834743'
                        address: null
                        company_name: null
                        company_phone: null
                        rc_number: null
                        country: null
                        postal_code: null
                        house_number: null
                        street: null
                        lcda: null
                        lga: null
                        city: null
                        state: null
                        avatar: null
                        avatar_thumb: null
                        is_active: 0
                        is_blocked: 0
                        must_change_password: 0
                        referral_code: EP2kpt1y
                        referred_by: null
                        created_at: '2022-08-12T16:46:21.000000Z'
                        updated_at: '2022-08-22T13:54:40.000000Z'
                        name: 'Testing Love'
                        avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                        name_with_email: 'Testing Love - alelebealsjoshua1@gmail.com'
                      -
                        id: 290803
                        first_name: Testing
                        last_name: Love
                        email: alelebealsjoshua10@gmail.com
                        email_verified_at: null
                        account_type: individual
                        pawn_master: 0
                        plan_id: null
                        subscription_id: null
                        gender: null
                        birthday: null
                        phone: null
                        address: null
                        company_name: null
                        company_phone: null
                        rc_number: null
                        country: null
                        postal_code: null
                        house_number: null
                        street: null
                        lcda: null
                        lga: null
                        city: null
                        state: null
                        avatar: null
                        avatar_thumb: null
                        is_active: 0
                        is_blocked: 0
                        must_change_password: 0
                        referral_code: rkCoOjx4
                        referred_by: null
                        created_at: '2022-08-12T16:46:46.000000Z'
                        updated_at: '2022-08-13T17:35:59.000000Z'
                        name: 'Testing Love'
                        avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                        name_with_email: 'Testing Love - alelebealsjoshua10@gmail.com'
                      -
                        id: 290804
                        first_name: Testing
                        last_name: Love
                        email: alelebealsjoshua101@gmail.com
                        email_verified_at: '2022-08-12T16:49:00.000000Z'
                        account_type: individual
                        pawn_master: 0
                        plan_id: null
                        subscription_id: null
                        gender: null
                        birthday: null
                        phone: null
                        address: null
                        company_name: null
                        company_phone: null
                        rc_number: null
                        country: null
                        postal_code: null
                        house_number: null
                        street: null
                        lcda: null
                        lga: null
                        city: null
                        state: null
                        avatar: null
                        avatar_thumb: null
                        is_active: 0
                        is_blocked: 0
                        must_change_password: 0
                        referral_code: w6snHTrK
                        referred_by: null
                        created_at: '2022-08-12T16:47:34.000000Z'
                        updated_at: '2022-08-12T16:52:25.000000Z'
                        name: 'Testing Love'
                        avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                        name_with_email: 'Testing Love - alelebealsjoshua101@gmail.com'
                      -
                        id: 290805
                        first_name: Testing
                        last_name: Love
                        email: alelebealsjoshua0@gmail.com
                        email_verified_at: null
                        account_type: individual
                        pawn_master: 0
                        plan_id: null
                        subscription_id: null
                        gender: null
                        birthday: null
                        phone: null
                        address: null
                        company_name: null
                        company_phone: null
                        rc_number: null
                        country: null
                        postal_code: null
                        house_number: null
                        street: null
                        lcda: null
                        lga: null
                        city: null
                        state: null
                        avatar: null
                        avatar_thumb: null
                        is_active: 0
                        is_blocked: 0
                        must_change_password: 0
                        referral_code: 0fmZMKYs
                        referred_by: null
                        created_at: '2022-08-13T18:58:42.000000Z'
                        updated_at: '2022-08-15T09:11:32.000000Z'
                        name: 'Testing Love'
                        avatar_url: 'https://phythaph.s3.amazonaws.com/users/_user_default.svg'
                        name_with_email: 'Testing Love - alelebealsjoshua0@gmail.com'
                    items:
                      type: object
                  first_page_url:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/users?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/users?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://phythaph.herokuapp.com/api/filter/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://phythaph.herokuapp.com/api/filter/users'
                  per_page:
                    type: integer
                    example: 10
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 5
                  total:
                    type: integer
                    example: 5
      tags:
        - Endpoints
      security: []
  /api/categories:
    get:
      summary: 'Fetch Categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"categories\": {\n          ...\n      }\n   }"
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Error
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error
      tags:
        - 'Open (No Auth) APIs'
      security: []
  /api/faqs:
    get:
      summary: 'Fetch Faqs'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"faqs\": {\n          ...\n      }\n   }"
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Error
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error
      tags:
        - 'Open (No Auth) APIs'
      security: []
  /api/subscription-plans:
    get:
      summary: 'Fetch Subscription Plans'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"plans\": {\n          ...\n      }\n   }"
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Error
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error
      tags:
        - 'Open (No Auth) APIs'
      security: []
  '/api/file-upload/{id}':
    post:
      summary: 'Upload file'
      description: 'The title parameter can either be (''image'' or ''file'')'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"File Uploaded Successfully\",\n   }"
        400:
          description: Failure
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No file uploaded'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No file uploaded'
      tags:
        - 'Pawn APIs'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: ''
                title:
                  type: string
                  description: ''
                  example: voluptate
              required:
                - file
                - title
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: maiores
  /api/pawn:
    post:
      summary: 'Pawn item'
      description: 'Make a new pawn request'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Request successful\",\n   \"data\": {\n      \"pawn\": {...}\n   }"
        400:
          description: Failure
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Pawn Request Failed'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Pawn Request Failed'
      tags:
        - 'Pawn APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
                  description: ''
                  example: assumenda
                item_features:
                  type: json
                  description: ''
                  example: enim
              required:
                - category_id
                - item_features
      security: []
    get:
      summary: 'Fetch User Pawns'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"pawns\": {\n          ...\n      }\n   }"
        404:
          description: Error
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Error
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error
      tags:
        - 'Pawn APIs'
      security: []
  '/api/pawn/{id}':
    get:
      summary: 'Fetch Single Pawn Item'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"\",\n   \"data\": {\n      \"pawn\": {\n          ...\n      }\n   }"
        404:
          description: Error
          content:
            text/plain:
              schema:
                type: string
                example: "\" {\n   \"success\": false,\n   \"message\": Error\"\n }"
      tags:
        - 'Pawn APIs'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pawn.'
        example: odio
        required: true
        schema:
          type: string
  /api/transaction/initialize:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"success\": true,\n   \"message\": \"Transaction generated\",\n   }"
        400:
          description: 'Bad request'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Cannot initialize transaction, please check your input and try again'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Cannot initialize transaction, please check your input and try again'
      tags:
        - 'Payment APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: ''
                  example: aut
                type:
                  type: string
                  description: ''
                  example: nihil
                scope:
                  type: string
                  description: ''
                  example: consectetur
                description:
                  type: string
                  description: ''
                  example: at
              required:
                - amount
                - type
                - scope
                - description
      security: []
tags:
  -
    name: 'Wallet APIs'
    description: ''
  -
    name: 'Auth APIs'
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Open (No Auth) APIs'
    description: ''
  -
    name: 'Pawn APIs'
    description: ''
  -
    name: 'Payment APIs'
    description: ''
